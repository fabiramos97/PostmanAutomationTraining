{
	"info": {
		"_postman_id": "9416f0c7-0b03-41f9-92b8-5be903e0d6e8",
		"name": "Pet Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30197406",
		"_collection_link": "https://apis-master-testing.postman.co/workspace/Team-Workspace~0d7e8de7-f942-470a-8afb-5793d17f51b9/collection/30197406-9416f0c7-0b03-41f9-92b8-5be903e0d6e8?action=share&source=collection_link&creator=30197406"
	},
	"item": [
		{
			"name": "ATC- Verify the existence of a pet that is on the inventory.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the existence of a pet that is on the inventor\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.id).to.eql(pm.globals.get(\"orderId\"));\r",
							"    pm.expect(response.status).to.eql(\"available\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/pet/:petId",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ATC- Verify the existence of a pet that is NOT on the inventory.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\",()=> \r",
							"   { pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the existence of a pet that is NOT on the inventory retrieves http not found\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.message).to.eql(\"HTTP 404 Not Found\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}//pet/:petId",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"",
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "130"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ATC- Verify all the pets that exists under the \"available\" status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify all the pets that exists under the available status\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.status).to.eql(\"available\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/pet/findByStatus?status=available",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "available"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ATC- Verify all the pets that exists under the \"pending\" status.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify all the pets that exists under the available status\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.status).to.eql(\"pending\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/pet/findByStatus?status=pending",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "pending"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ATC- Verify all the pets that exists under the \"sold\" status.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify all the pets that exists under the sold status\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.status).to.eql(\"sold\");\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/pet/findByStatus?status=sold",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "sold"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ATC- Verify adding a new pet to the system.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify adding a new pet to the system\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.status).to.eql(\"available\");\r",
							"    pm.response.json().to.have.property('id');\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 102,\r\n  \"name\": \"Galia\",\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/pet/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ATC- Verify the newly created pet appears in the inventory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\",()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the newly created pet appears in the inventory\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.status).to.eql(\"available\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/pet/:petId",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "102"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "TC02 - S00 - PUT - Update an existing pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check response as delivered and placed\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.status).to.eql(\"placed\");\r",
							"    pm.expect(response.complete).to.eql(true);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 8,\r\n  \"category\": {\r\n    \"id\": 4,\r\n    \"name\": \"Kitty\"\r\n  },\r\n  \"name\": \"Kitty 2\",\r\n  \"photoUrls\": [\r\n    \"\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"tag2\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/pet",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": [
				{
					"name": "TC02 - S01 - POST Place an order - Placed",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 130,\r\n  \"petId\": 19877562,\r\n  \"quantity\": 5,\r\n  \"shipDate\": \"2023-10-03T14:41:52.765Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/store/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 03 Oct 2023 14:45:03 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "117"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, DELETE, PUT"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Content-Type, api_key, Authorization"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "Content-Disposition"
						},
						{
							"key": "Server",
							"value": "Jetty(9.4.9.v20180320)"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 130,\n    \"petId\": 19877562,\n    \"quantity\": 5,\n    \"shipDate\": \"2023-10-03T14:41:52.765+00:00\",\n    \"status\": \"placed\",\n    \"complete\": true\n}"
				}
			]
		},
		{
			"name": "TC02 - S00 - PUT - Update an existing pet Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check response as delivered and placed\"), ()=>{\r",
							"    const response = pm.response.to.be.json();\r",
							"    pm.expect(response.status).to.eql(\"placed\");\r",
							"    pm.expect(response.complete).to.eql(true);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 8,\r\n  \"category\": {\r\n    \"id\": 4,\r\n    \"name\": \"Kitty\"\r\n  },\r\n  \"name\": \"Kitty 2\",\r\n  \"photoUrls\": [\r\n    \"\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"tag2\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/pet/:petId",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "13"
						}
					]
				}
			},
			"response": [
				{
					"name": "TC02 - S01 - POST Place an order - Placed",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 130,\r\n  \"petId\": 19877562,\r\n  \"quantity\": 5,\r\n  \"shipDate\": \"2023-10-03T14:41:52.765Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/store/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 03 Oct 2023 14:45:03 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "117"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, DELETE, PUT"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Content-Type, api_key, Authorization"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "Content-Disposition"
						},
						{
							"key": "Server",
							"value": "Jetty(9.4.9.v20180320)"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 130,\n    \"petId\": 19877562,\n    \"quantity\": 5,\n    \"shipDate\": \"2023-10-03T14:41:52.765+00:00\",\n    \"status\": \"placed\",\n    \"complete\": true\n}"
				}
			]
		}
	]
}